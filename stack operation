#include <stdio.h>
#include <stdlib.h>
int stack[6], rev[6];
int top = -1, k = 0;
int size;
void push();
void pop();
void display();
int pali();
void main() {
 int choice, f;
 printf("Enter the Size of the Stack: ");
 scanf("%d", &size);
 printf("\n1.Push \n2.Pop \n3.Display \n4.Check for palindrome
\n5.Exit \n");
 while (1) {
 printf("Enter your choice: ");
 scanf("%d", &choice);
 switch (choice)
 {
 case 1: push();
 break;
 case 2: pop();
 break;
 case 3: display();
 break;
 case 4: f = pali();
 if(f == 1)
 printf("It's Palindrome");
 else
 printf("Not a Palindrome");
 break;
 case 5: exit(0);
 default: printf("Invalid choice");
 }
 }
}
void push() {
 int num;
 if(top == (size - 1)) {
 printf("\nStack Overflow\n");
 } else {
 printf("Enter the number to be pushed: ");
 scanf("%d", &num);
 top++;
 stack[top] = num;
 }
}
void pop() {
 int num;
 if(top == -1) {
 printf("\nStack Underflow\n");
 } else{
 num = stack[top];
 printf("Deleted Element is %d\n", num);
 top--;
 }
}
void display() {
 int i;
 if(top == -1) {
 printf("\nStack Underflow\n");
 } else {
 printf("Stack Contents.. \n");
 for(i = top; i >= 0; i--) {
 printf("%d\n", stack[i]);
 rev[k++] = stack[i];
 }
 }
}
int pali() {
 int i, flag = 1;
 for(i = top; i >= 0; i--) {
 if(stack[i] != rev[--k]) {
 flag = 0;
 }
 }
 return flag;
}
